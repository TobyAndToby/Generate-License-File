name: CI

on:
  push:
    branches:
      - renovate/*
  pull_request:
    branches:
      - main
  workflow_call:
    inputs:
      version:
        description: The npm version to use for generate-license-file
        default: "0.0.0"
        required: false
        type: string

env:
  NODE_VERSION: 16

jobs:
  lint:
    name: Lint

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npx lerna run lint --parallel

      - name: Run Prettier
        run: npx prettier --check .

  build:
    strategy:
      matrix:
        project:
          - name: Generate License File
            path: ./projects/packages/generate-license-file
            tarName: generate-license-file-*.tgz

          - name: Webpack Plugin
            path: ./projects/packages/webpack-plugin
            tarName: generate-license-file-webpack-plugin-*.tgz

    name: Build ${{ matrix.project.name }}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Log Version
        shell: pwsh
        run: Write-Host ${{ inputs.version }}

      - name: Set Version
        if: inputs.version != ''
        working-directory: ${{ matrix.project.path }}
        run: npm --no-git-tag-version --allow-same-version version ${{ inputs.version }}

      - name: Build
        working-directory: ${{ matrix.project.path }}
        run: npm run build

      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: Build (${{ matrix.project.name }})
          path: ${{ matrix.project.path }}/dist

      - name: Pack
        working-directory: ${{ matrix.project.path }}
        run: npm pack

      - name: Upload Packed Build
        uses: actions/upload-artifact@v3
        with:
          name: Packed-Build (${{ matrix.project.name }})
          path: ${{ matrix.project.path }}/${{ matrix.project.tarName }}

  build-website:
    name: Build Website

    runs-on: ubuntu-latest

    env:
      PROJECT: ./projects/website/

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build Website
        working-directory: ./projects/website
        run: npm run build

      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: Website
          path: ./projects/website/build/

  test:
    name: Unit Test

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run Unit Tests
        run: npx lerna run test --stream -- --ci --coverage

      - name: Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: coverage

  e2e:
    needs:
      - build

    strategy:
      fail-fast: false
      matrix:
        os:
          - name: Ubuntu
            value: ubuntu-latest
          - name: MacOS
            value: macos-latest
          - name: Windows
            value: windows-latest
        node:
          - 14
          - 16
          - 18

    name: E2E (Node ${{ matrix.node }} on ${{ matrix.os.name }})

    runs-on: ${{ matrix.os.value }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.JS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      - name: Install latest npm
        if: matrix.node == 14
        run: npm i -g npm@latest

      - name: Install dependencies
        run: npm ci

      - name: Install dependencies for project-1
        working-directory: ./projects/tests/e2e-projects/project-1
        run: npm ci

      - name: Download Build
        uses: actions/download-artifact@v3
        with:
          name: Build
          path: ./projects/packages/generate-license-file/dist

      - name: Run E2E Tests
        run: npx lerna run test:e2e -- --ci
