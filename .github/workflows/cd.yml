name: Monorepo CD

on:
  release:
    types:
      - published

env:
  NODE_VERSION: 18

jobs:
  get-version:
    name: Get Version

    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.get_version.outputs.version-without-v }}

    steps:
      - name: Get Version
        id: get_version
        uses: battila7/get-version-action@v2

      - name: Log Version
        shell: pwsh
        run: Write-Host ${{ steps.get_version.outputs.version-without-v }}

  ci:
    needs:
      - get-version
    name: Run Monorepo CI
    uses: ./.github/workflows/src-ci.yml
    with:
      version: ${{ needs.get-version.outputs.version }}
    secrets: inherit

  deploy:
    needs:
      - get-version
      - ci

    name: Deploy

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          registry-url: https://registry.npmjs.org/

      - name: Install dependencies
        run: npm ci

      - name: Get Latest Tag
        uses: tobysmith568/npm-publish-latest-tag@v1
        id: latest_tag
        with:
          package-name: generate-license-file
          version: ${{ needs.get-version.outputs.version }}

      - name: Download Build
        uses: actions/download-artifact@v3
        with:
          name: Build
          path: dist

      - name: Publish
        run: npx nx run-many --target publish --args="--tag=${{ steps.latest_tag.outputs.latest-tag }}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
